
@model WebApplication1.Models.CuentaCreacionViewModel
@{
    ViewBag.Title = "Crear Cuentas";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <!-- Custom styles for a professional look -->
    <style>
        body {
            background-color: #f7f8fa;
        }

        .form-container {
            background-color: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .navbar-brand {
            font-weight: bold;
            font-size: 1.5rem;
        }

        h2 {
            font-weight: bold;
            color: #343a40;
        }

        .btn-primary {
            background-color: #4CAF50;
            border: none;
        }

        .btn-secondary {
            background-color: #6c757d;
        }
    </style>
</head>
<body>
    <!-- Barra de navegación -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
        <a class="navbar-brand" href="#">Gestión Empresarial</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Index", "Home")"><i class='fas fa-home'></i> Inicio</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Cuentas", "Cuentas")">Cuentas</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("CrearCuentas", "Cuentas")">Crear Cuenta</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("TiposDeCuentas", "Home")">Crear Tipos de Cuenta</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("CrearCategoria", "Categoria")">Crear Categoría</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("ListarCategorias", "Categoria")">Listar Categorías</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("ListarTransacciones", "Transaccion")">Listar Transacciones</a>
                </li>
            </ul>
        </div>
    </nav>



    <div class="container mt-5">
        <h2 class="mb-4">Crear Cuentas</h2>
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow-sm mb-5">
                    <a href="@Url.Action("Cuentas", "Cuentas")" class="btn btn-primary mb-3">Ver Cuentas</a>
                    <div class="card-header bg-primary text-white text-center">
                        <h2>Crear Nueva Cuenta</h2>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("CrearCuentas", "Cuentas", FormMethod.Post, new { id = "crearCuentaForm" }))
                        {
                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Nombre, new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-user"></i></span>
                                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", placeholder = "Ingrese el nombre de la cuenta" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.TipoCuentaId, "Tipo de Cuenta", new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-list"></i></span>
                                    @Html.DropDownListFor(model => model.TipoCuentaId, Model.TiposCuentas, "Seleccione un tipo", new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.TipoCuentaId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Balance, new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-dollar-sign"></i></span>
                                    @Html.TextBoxFor(model => model.Balance, "{0:N2}", new { @class = "form-control", placeholder = "Ingrese el balance" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Descripcion, new { @class = "form-label" })
                                @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", rows = 3, placeholder = "Ingrese la descripción de la cuenta" })
                                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                            </div>

                            <div class="d-grid">
                                <button type="submit" class="btn btn-success btn-block">
                                    <i class="fas fa-save"></i> Crear Cuenta
                                </button>
                            </div>
                        }

                        <!-- Mostrar mensaje de error si existe -->
                        @if (ViewBag.ErrorMessage != null)
                        {
                            <div class="alert alert-danger mt-3" role="alert">
                                <strong>Error:</strong> @ViewBag.ErrorMessage
                            </div>
                        }

                        <!-- Mostrar mensaje de éxito si existe -->
                        @if (ViewBag.Message != null)
                        {
                            <div class="alert alert-success mt-3" role="alert">
                                <strong>Éxito:</strong> @ViewBag.Message
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>




</body>
</html>



<!-- Incluye FontAwesome para los iconos -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<!-- Incluye SweetAlert2 para los mensajes -->

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>



@section scripts {
    @if (ViewBag.Message != null)
    {
        <script>
            Swal.fire({
                icon: 'success',
                title: 'Éxito',
                text: '@ViewBag.Message',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Limpia los campos del formulario después de mostrar el mensaje
                    document.getElementById('crearCuentaForm').reset();
                }
            });
        </script>

        // Limpia el mensaje después de mostrarlo

        ViewBag.Message = null;

    }

    @if (ViewBag.ErrorMessage != null)
    {
        <script>
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: '@ViewBag.ErrorMessage',
                    confirmButtonText: 'OK'
                });
        </script>

        // Limpia el mensaje después de mostrarlo
        ViewBag.ErrorMessage = null;
    }

}











